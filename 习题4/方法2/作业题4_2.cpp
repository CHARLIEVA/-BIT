//
//  作业题：4 用两种方法判断一个数是不是2的阶次方数
//
/*  方法二：
 1 由2的n次方的“二进制” 只有 最高位是1 其余为0 例如（“8”的二进制为 “100”）
 2 减1后 最高位为0 其余为1 （“7”的二进制为 "011"）
 3 所以 将原来的数 减去1 在进行与运算 结果应该为0
 */
/*
 「运算符」
 & 按位与运算：两位同时为1 结果为1 否则为0
 | 按位或运算：两位其中一个为1 结果为1
 ^ 异或：两值不同 结果为1
 ~ 取反：0变1 1变0
 << 左移：各二进制全部左移动若干位  左边丢弃 右边补0
 >> 右移：各二进制全部右移动若干位  左边 正数补0 负数补1  右边丢弃
 
 #注意：两个不同长度的数据进行位运算时，系统会将二者按右端对齐，然后进行位运算。
       短的那个数据如果是负数，左边补1，否则补0。
 */
//

#include <iostream>
using namespace std ;
int main(){
    int n;
    cout << "请输入一个数：";
    while( cin >>  n ){
        if(!(n&(n-1)))
            cout << n << "是2的阶次方数" << endl;
        else cout<< n << "不是2的阶次方数" << endl;
    }
    return 0;
}

